@use "./fonts.scss";
@use './globalTypography.scss' as *;

:root {
    --gray-3: #E0E0E0;
    --gray-9: #A3A3A3;
    --gray-10: #999999;
    --gray-13: #7A7A7A;
    --gray-18: #474747;
    --gray-20: #333333;
    --gray-22: #1F1F1F;
    --gray-21: #292929;
    --gray-23: #141414;
    --gray-24: #0A0A0A;
    --primary-6: #F15223;
    --green-6: #2D9F64;
    --yellow-6: #FFAB1A;
    --red-6: #F2374D;
    --red-7: #D0284B;
    --white: #ffff;
    --black: #000000;
    --mild-dark: #0A0A0A;

    --border-radius: 8px;
    --border-radius-md: 12px;
    --border-radius-lg: 16px;
    --transition-cubic: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin: 0;
}

a {
    text-decoration: none;
    -webkit-tap-highlight-color: transparent;
    color: inherit;
}

body {
    font-family: "DM-regular", sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -ms-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    font-size: $fontSizeMedium + px;
    font-weight: $fontWeightRegular;
    background-color: var(--black);
    overflow-y: overlay;
    overflow-x: hidden;
}

.modal-opened {
    overflow: hidden;
}

$columns: 12;
$gap: 12px;
$breakpoints: (
    xs: 576px,
    sm: 768px,
    md: 992px,
    lg: 1200px,
    xl: 1440px
);

@mixin create-selectors($breakpoint: null) {
    $infix: if($breakpoint ==null, '', '-#{$breakpoint}');

    @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
            grid-column-end: span $i;
        }

        .col-offset#{$infix}-#{$i} {
            grid-column-start: $i + 1;
        }

        .row#{$infix}-#{$i} {
            grid-row-end: span $i;
        }

        .row-offset#{$infix}-#{$i} {
            grid-row-start: $i + 1;
        }
    }
}

.grid {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    grid-gap: $gap;
    gap: $gap;
}

@include create-selectors;

@each $breakpoint, $width in $breakpoints {
    @media (min-width: $width) {
        @include create-selectors($breakpoint);
    }
}